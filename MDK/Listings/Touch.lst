C51 COMPILER V9.59.0.0   TOUCH                                                             03/04/2021 10:18:17 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TOUCH
OBJECT MODULE PLACED IN .\Objects\Touch.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\src\Touch.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\inc;..\mmi_inc;.
                    -.\dqiot_inc) DEBUG OBJECTEXTEND PRINT(.\Listings\Touch.lst) TABS(2) OBJECT(.\Objects\Touch.obj)

line level    source

   1          #include "OB38A08T2.h"
   2          #include "Touch.h"
   3          
   4          extern unsigned char TOUCH_Auto_Set_Counter_Limit_Range(void);
   5          
   6          unsigned char bdata ucTkStatusPort0;
   7          unsigned char bdata ucTkStatusPort1;
   8          
   9          sbit bTk00Flag = ucTkStatusPort0 ^ 0;
  10          sbit bTk01Flag = ucTkStatusPort0 ^ 1;
  11          sbit bTk02Flag = ucTkStatusPort0 ^ 2;
  12          sbit bTk03Flag = ucTkStatusPort0 ^ 3;
  13          sbit bTk04Flag = ucTkStatusPort0 ^ 4;
  14          sbit bTk05Flag = ucTkStatusPort0 ^ 5;
  15          sbit bTk06Flag = ucTkStatusPort0 ^ 6;
  16          sbit bTk07Flag = ucTkStatusPort0 ^ 7;
  17          
  18          sbit bTk08Flag = ucTkStatusPort1 ^ 0;
  19          sbit bTk09Flag = ucTkStatusPort1 ^ 1;
  20          sbit bTk10Flag = ucTkStatusPort1 ^ 2;
  21          sbit bTk11Flag = ucTkStatusPort1 ^ 3;
  22          sbit bTk12Flag = ucTkStatusPort1 ^ 4;
  23          sbit bTk13Flag = ucTkStatusPort1 ^ 5;
  24          sbit bTk14Flag = ucTkStatusPort1 ^ 6;
  25          sbit bTk15Flag = ucTkStatusPort1 ^ 7;
  26          
  27          unsigned char g_ucTkNumber = 0xFF;
  28          
  29          void TOUCH_ISR(void) interrupt d_TK_Vector using 1
  30          {
  31   1        EA = 0;
  32   1        ((void(code *)(void))0x2011)(); //Touch ISR Function
  33   1        EA = 1;
  34   1      }
  35          
  36          //According to practical application, user can change upper/lower limit by calliing this function
  37          //0: AutoSet touch upper/lower limit data OK
  38          //1: Online mode (Connecting with Touchlyzer)
  39          //2: Number of programming is over the upper limit (Count>800)
  40          //3: Error occurred
  41          unsigned char TOUCH_Auto_Set_Counter_Limit_Range(void)
  42          {
  43   1        return ((unsigned char(code *)(void))0x2014)();
  44   1      }
  45          
  46          void Touch_Init(void)
  47          {
  48   1        ((void(code *)(void))0x2005)(); //Touch initial
  49   1      }
  50          
  51          void Touch_Normal(void)
  52          {
  53   1        ((unsigned char(code *)(void))0x2008)(); //Touch Normal Run
  54   1      
C51 COMPILER V9.59.0.0   TOUCH                                                             03/04/2021 10:18:17 PAGE 2   

  55   1        ucTkStatusPort0 = TKSTATUS0;
  56   1        ucTkStatusPort1 = TKSTATUS1;
  57   1      
  58   1        if (ucTkStatusPort0 == 0 && ucTkStatusPort1 == 0)
  59   1        {
  60   2          g_ucTkNumber = 0xFF;
  61   2        }
  62   1        else if (g_ucTkNumber == 0xFF)
  63   1        {
  64   2          if (bTk00Flag == 1) //Check TK0
  65   2            g_ucTkNumber = 7;
  66   2          else if (bTk01Flag == 1) //Check TK1
  67   2            g_ucTkNumber = 0xfe;
  68   2          else if (bTk02Flag == 1) //Check TK2
  69   2            g_ucTkNumber = 8;
  70   2          else if (bTk03Flag == 1) //Check TK3
  71   2            g_ucTkNumber = 1;
  72   2          else if (bTk04Flag == 1) //Check TK4
  73   2            g_ucTkNumber = 4;
  74   2          else if (bTk05Flag == 1) //Check TK5
  75   2            g_ucTkNumber = 0;
  76   2          else if (bTk06Flag == 1) //Check TK6
  77   2            g_ucTkNumber = 2;
  78   2          else if (bTk07Flag == 1) //Check TK7
  79   2            g_ucTkNumber = 5;
  80   2          else if (bTk08Flag == 1) //Check TK8
  81   2            g_ucTkNumber = 0xfe;
  82   2          else if (bTk09Flag == 1) //Check TK9
  83   2            g_ucTkNumber = 0xfe;
  84   2          else if (bTk10Flag == 1) //Check TK10 A
  85   2            g_ucTkNumber = 0xfe;
  86   2          else if (bTk11Flag == 1) //Check TK11 B
  87   2            g_ucTkNumber = 0xfe;
  88   2          else if (bTk12Flag == 1) //Check TK12 C
  89   2            g_ucTkNumber = 6;
  90   2          else if (bTk13Flag == 1) //Check TK13 D
  91   2            g_ucTkNumber = 3;
  92   2          else if (bTk14Flag == 1) //Check TK14 E
  93   2            g_ucTkNumber = 15;
  94   2          else if (bTk15Flag == 1) //Check TK15 F
  95   2            g_ucTkNumber = 14;
  96   2      
  97   2        }
  98   1      }
  99          
 100          unsigned char Touch_Getinput(void)
 101          {
 102   1        return g_ucTkNumber;
 103   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    213    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
