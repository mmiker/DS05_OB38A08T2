C51 COMPILER V9.59.0.0   TOUCH                                                             02/22/2021 12:20:10 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TOUCH
OBJECT MODULE PLACED IN .\Objects\Touch.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\src\Touch.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\inc) DEBUG OBJECTEXTEN
                    -D PRINT(.\Listings\Touch.lst) TABS(2) OBJECT(.\Objects\Touch.obj)

line level    source

   1          #include "OB38A08T2.h"
   2          #include "Touch.h"
   3          
   4          
   5          extern unsigned char TOUCH_Auto_Set_Counter_Limit_Range(void);
   6          
   7          
   8          unsigned char bdata ucTkStatusPort0;
   9          unsigned char bdata ucTkStatusPort1;
  10          
  11          sbit bTk00Flag  = ucTkStatusPort0^0;
  12          sbit bTk01Flag  = ucTkStatusPort0^1;
  13          sbit bTk02Flag  = ucTkStatusPort0^2;
  14          sbit bTk03Flag  = ucTkStatusPort0^3;
  15          sbit bTk04Flag  = ucTkStatusPort0^4;
  16          sbit bTk05Flag  = ucTkStatusPort0^5;
  17          sbit bTk06Flag  = ucTkStatusPort0^6;
  18          sbit bTk07Flag  = ucTkStatusPort0^7;
  19          
  20          sbit bTk08Flag  = ucTkStatusPort1^0;
  21          sbit bTk09Flag  = ucTkStatusPort1^1;
  22          sbit bTk10Flag  = ucTkStatusPort1^2;
  23          sbit bTk11Flag  = ucTkStatusPort1^3;
  24          sbit bTk12Flag  = ucTkStatusPort1^4;
  25          sbit bTk13Flag  = ucTkStatusPort1^5;
  26          sbit bTk14Flag  = ucTkStatusPort1^6;
  27          sbit bTk15Flag  = ucTkStatusPort1^7;
  28          
  29          
  30          unsigned char g_ucTkNumber = 0xFF;
  31          
  32          void TOUCH_ISR(void) interrupt d_TK_Vector using 1
  33          {
  34   1          EA = 0;
  35   1          ((void(code*)(void))0x2011)();      //Touch ISR Function
  36   1          EA = 1;
  37   1      }
  38          
  39          //According to practical application, user can change upper/lower limit by calliing this function
  40          //0: AutoSet touch upper/lower limit data OK
  41          //1: Online mode (Connecting with Touchlyzer)
  42          //2: Number of programming is over the upper limit (Count>800)
  43          //3: Error occurred
  44          unsigned char TOUCH_Auto_Set_Counter_Limit_Range(void)
  45          {
  46   1          return ((unsigned char(code*)(void))0x2014)();          
  47   1      }
  48          
  49          void Touch_Init(void)
  50          {
  51   1          ((void(code*)(void))0x2005)();                   //Touch initial
  52   1      }
  53          
  54          void Touch_Normal(void)
C51 COMPILER V9.59.0.0   TOUCH                                                             02/22/2021 12:20:10 PAGE 2   

  55          {
  56   1        ((unsigned char(code*)(void))0x2008)();  //Touch Normal Run
  57   1      
  58   1        ucTkStatusPort0 = TKSTATUS0;
  59   1        ucTkStatusPort1 = TKSTATUS1;
  60   1        
  61   1        if (ucTkStatusPort0 == 0 && ucTkStatusPort1 == 0)
  62   1        {
  63   2          g_ucTkNumber = 0xFF;
  64   2        }
  65   1        else if (g_ucTkNumber == 0xFF)
  66   1        {
  67   2          if (bTk00Flag == 1)        //Check TK0
  68   2            g_ucTkNumber = 0;
  69   2          //else if (bTk01Flag == 1)     //Check TK1
  70   2          //  g_ucTkNumber = 1;
  71   2          else if (bTk02Flag == 1)     //Check TK2
  72   2            g_ucTkNumber = 1;
  73   2          else if (bTk03Flag == 1)     //Check TK3
  74   2            g_ucTkNumber = 2;
  75   2          else if (bTk04Flag == 1)     //Check TK4
  76   2            g_ucTkNumber = 3;
  77   2          else if (bTk05Flag == 1)     //Check TK5
  78   2            g_ucTkNumber = 4;
  79   2          else if (bTk06Flag == 1)     //Check TK6
  80   2            g_ucTkNumber = 5;
  81   2          else if (bTk07Flag == 1)     //Check TK7
  82   2            g_ucTkNumber = 6;
  83   2          //else if (bTk08Flag == 1)     //Check TK8
  84   2          //  g_ucTkNumber = 8;
  85   2          //else if (bTk09Flag == 1)     //Check TK9
  86   2          //  g_ucTkNumber = 9;
  87   2          //else if (bTk10Flag == 1)     //Check TK10
  88   2          //  g_ucTkNumber = 10;
  89   2          else if (bTk11Flag == 1)     //Check TK11
  90   2            g_ucTkNumber = 7;
  91   2          else if (bTk12Flag == 1)     //Check TK12
  92   2            g_ucTkNumber = 8;
  93   2          else if (bTk13Flag == 1)     //Check TK13
  94   2            g_ucTkNumber = 9;
  95   2          else if (bTk14Flag == 1)     //Check TK14
  96   2            g_ucTkNumber = 10;
  97   2          else if (bTk15Flag == 1)     //Check TK15
  98   2            g_ucTkNumber = 11;
  99   2        }
 100   1      
 101   1      }
 102          
 103          unsigned char Touch_Getinput(void)
 104          {
 105   1        return g_ucTkNumber;
 106   1      
 107   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    149    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   TOUCH                                                             02/22/2021 12:20:10 PAGE 3   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
