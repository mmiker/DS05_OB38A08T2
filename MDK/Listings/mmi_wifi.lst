C51 COMPILER V9.59.0.0   MMI_WIFI                                                          03/04/2021 15:15:16 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MMI_WIFI
OBJECT MODULE PLACED IN .\Objects\mmi_wifi.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\mmi_src\mmi_wifi.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\inc;..\mm
                    -i_inc) DEBUG OBJECTEXTEND PRINT(.\Listings\mmi_wifi.lst) TABS(2) OBJECT(.\Objects\mmi_wifi.obj)

line level    source

   1          #ifndef __MMI_WIFI_C__
   2          #define __MMI_WIFI_C__
   3          
   4          #include "mmi_feature.h"
   5          #include "dqiot_drv_wifi.h"
   6          #include "mmi_sys.h"
   7          #include "mmi_ms.h"
   8          #include "mmi_audio.h"
   9          #include "mmi_fs.h"
  10          #include "delay.h"
  11          #include "mmi_led.h"
  12          
  13          static unsigned int wifi_check_times = 0;
  14          
  15          
  16          /*
  17          parameter: 
  18            none
  19          return :
  20            none
  21          */
  22          void mmi_dq_wifi_wakeup(void)
  23          {
  24   1        wifi_wake_up();
  25   1      }
  26          
  27          /*
  28          parameter: 
  29            none
  30          return :
  31            none
  32          */
  33          void mmi_dq_wifi_sleep(void)
  34          {
  35   1        wifi_sleep_mode();
  36   1      }
  37          
  38          /*
  39          parameter: 
  40            none
  41          return :
  42            none
  43          */
  44          unsigned char mmi_dq_wifi_setting(void)
  45          {
  46   1        unsigned char ret = 1;
  47   1        wifi_wake_up();
  48   1        delay_ms(250);
  49   1        if(wifi_net_connect_send() == 0)
  50   1        {
  51   2          delay_ms(250);
  52   2          ret = wifi_net_connect_send();
  53   2        }
  54   1        if(ret == 1)
C51 COMPILER V9.59.0.0   MMI_WIFI                                                          03/04/2021 15:15:16 PAGE 2   

  55   1        {
  56   2          wifi_check_times = 1;
  57   2          mmi_dq_sys_set_wifi_check(0);
  58   2        }
  59   1        return ret;
  60   1      }
  61          
  62          /*
  63          parameter: 
  64            none
  65          return :
  66            none
  67          */
  68          void mmi_dq_wifi_connected_fail(void)
  69          {
  70   1        mmi_dq_fs_set_wifi_setting(0);
  71   1        mmi_dq_aud_play_with_id(AUD_ID_SET_FAILED);
  72   1        //mmi_dq_signal_led_light(LED_TYPE_SET);
  73   1        //mmi_dq_sys_show_cur_menu_list();
  74   1        mmi_dq_set_aud_state(0);
  75   1        mmi_dq_signal_led_close(LED_TYPE_SET);
  76   1        mmi_dq_ms_set_sys_state(SYS_STATUS_IDLE);
  77   1        return;
  78   1      }
  79          
  80          /*
  81          parameter: 
  82            none
  83          return :
  84            none
  85          */
  86          void mmi_dq_wifi_connected_suc(void)
  87          { 
  88   1        mmi_dq_fs_set_wifi_setting(1);
  89   1        mmi_dq_aud_play_with_id(AUD_ID_WIFI_CONNECT_OK);
  90   1        //mmi_dq_signal_led_light(LED_TYPE_SET);
  91   1        //mmi_dq_sys_show_cur_menu_list();
  92   1        mmi_dq_set_aud_state(0);
  93   1        mmi_dq_signal_led_close(LED_TYPE_SET);
  94   1        mmi_dq_ms_set_sys_state(SYS_STATUS_IDLE);
  95   1        return;
  96   1      }
  97          
  98          /*
  99          parameter: 
 100            none
 101          return :
 102            none
 103          */
 104          void mmi_dq_wifi_check_connect(void)
 105          {
 106   1        static unsigned char wifi_check_connect_flag = 0;
 107   1        wifi_check_times++;
 108   1        if(wifi_net_connect_state() == 1)
 109   1        {
 110   2          wifi_check_connect_flag++;
 111   2          if(wifi_check_connect_flag>=2)
 112   2          {
 113   3            mmi_dq_wifi_connected_suc();
 114   3            wifi_check_connect_flag = 0;
 115   3            wifi_check_times = 0;
 116   3            return;
C51 COMPILER V9.59.0.0   MMI_WIFI                                                          03/04/2021 15:15:16 PAGE 3   

 117   3          }
 118   2        }
 119   1        else
 120   1        {
 121   2          wifi_check_connect_flag = 0;
 122   2        }
 123   1        
 124   1        if(wifi_check_times > 600)
 125   1        {
 126   2          mmi_dq_wifi_connected_fail();
 127   2          wifi_check_times = 0;
 128   2        }
 129   1        else
 130   1          mmi_dq_sys_set_wifi_check(0);
 131   1      }
 132          
 133          /*
 134          parameter: 
 135            none
 136          return :
 137            none
 138          */
 139          unsigned char mmi_dq_wifi_open_ask(void)
 140          {
 141   1        unsigned char ret = 1;
 142   1        if(wifi_check_times > 0)
 143   1          return 0;
 144   1        mmi_dq_wifi_wakeup();
 145   1        delay_ms(250);
 146   1        if(wifi_open_ask() == 0)
 147   1        {
 148   2          delay_ms(250);
 149   2          ret =  wifi_open_ask();
 150   2        }
 151   1        if(ret == 1)
 152   1        {
 153   2          wifi_check_times = 1;
 154   2          mmi_dq_sys_set_wifi_check(1);
 155   2        }
 156   1        return ret;
 157   1      }
 158          
 159          /*
 160          parameter: 
 161            none
 162          return :
 163            none
 164          */
 165          void mmi_dq_wifi_check_open(void)
 166          {
 167   1        unsigned char state = wifi_open_reply_get();
 168   1        wifi_check_times++;
 169   1        if(state == 1)
 170   1        {
 171   2          if(SYS_STATUS_ENTER_SLEEP == mmi_dq_ms_get_sys_state())
 172   2            mmi_dq_sys_wake_up();
 173   2          mmi_dq_sys_door_open(SYS_OPEN_BY_WIFI);
 174   2          wifi_check_times = 0;
 175   2        }
 176   1        else if(state == 2 || wifi_check_times > 300)
 177   1        {
 178   2          if(SYS_STATUS_ENTER_SLEEP == mmi_dq_ms_get_sys_state())
C51 COMPILER V9.59.0.0   MMI_WIFI                                                          03/04/2021 15:15:16 PAGE 4   

 179   2            mmi_dq_sys_wake_up();
 180   2          mmi_dq_aud_play_with_id(AUD_ID_OPRATION_FAIL);
 181   2          wifi_check_times = 0;
 182   2        }
 183   1        else
 184   1          mmi_dq_sys_set_wifi_check(1);
 185   1      
 186   1      }
 187          
 188          
 189          /*
 190          parameter: 
 191            none
 192          return :
 193            none
 194          */
 195          void mmi_dq_wifi_add_password(void)
 196          {
 197   1        mmi_dq_wifi_wakeup();
 198   1      
 199   1        delay_ms(150);
 200   1        wifi_add_password();
 201   1      }
 202          
 203          /*
 204          parameter: 
 205            none
 206          return :
 207            none
 208          */
 209          void mmi_dq_wifi_del_password(void)
 210          {
 211   1        mmi_dq_wifi_wakeup();
 212   1      
 213   1        delay_ms(150);
 214   1      
 215   1        wifi_del_password();
 216   1      }
 217          
 218          /*
 219          parameter: 
 220            none
 221          return :
 222            none
 223          */
 224          void mmi_dq_wifi_add_fp(void)
 225          {
 226   1        mmi_dq_wifi_wakeup();
 227   1      
 228   1        delay_ms(150);
 229   1      
 230   1        wifi_add_fp();
 231   1      }
 232          
 233          /*
 234          parameter: 
 235            none
 236          return :
 237            none
 238          */
 239          void mmi_dq_wifi_del_fp(void)
 240          {
C51 COMPILER V9.59.0.0   MMI_WIFI                                                          03/04/2021 15:15:16 PAGE 5   

 241   1        mmi_dq_wifi_wakeup();
 242   1      
 243   1        delay_ms(150);
 244   1      
 245   1        wifi_del_fp();
 246   1      }
 247          
 248          /*
 249          parameter: 
 250            none
 251          return :
 252            none
 253          */
 254          void mmi_dq_wifi_open_by_password(void)
 255          {
 256   1        mmi_dq_wifi_wakeup();
 257   1      
 258   1        delay_ms(100);
 259   1      
 260   1        wifi_open_by_password();
 261   1      }
 262          
 263          /*
 264          parameter: 
 265            none
 266          return :
 267            none
 268          */
 269          void mmi_dq_wifi_open_by_fp(void)
 270          {
 271   1        mmi_dq_wifi_wakeup();
 272   1      
 273   1        delay_ms(150);
 274   1      
 275   1        wifi_open_by_fp();
 276   1      }
 277          
 278          /*
 279          parameter: 
 280            none
 281          return :
 282            none
 283          */
 284          void mmi_dq_wifi_open_by_rfid(void)
 285          {
 286   1        mmi_dq_wifi_wakeup();
 287   1      
 288   1        delay_ms(150);
 289   1      
 290   1        wifi_open_by_rfid();
 291   1      }
 292          
 293          
 294          /*
 295          parameter: 
 296            none
 297          return :
 298            none
 299          */
 300          void mmi_dq_wifi_open_by_key(void)
 301          {
 302   1        mmi_dq_wifi_wakeup();
C51 COMPILER V9.59.0.0   MMI_WIFI                                                          03/04/2021 15:15:16 PAGE 6   

 303   1      
 304   1        delay_ms(150);
 305   1      
 306   1        wifi_open_by_key();
 307   1      }
 308          
 309          /*
 310          parameter: 
 311            none
 312          return :
 313            none
 314          */
 315          void mmi_dq_wifi_open_by_wifi(void)
 316          {
 317   1      
 318   1        wifi_open_by_wifi();
 319   1      }
 320          
 321          /*
 322          parameter: 
 323            none
 324          return :
 325            none
 326          */
 327          void mmi_dq_wifi_door_close(void)
 328          {
 329   1      
 330   1        wifi_door_close();
 331   1      }
 332          
 333          /*
 334          parameter: 
 335            none
 336          return :
 337            none
 338          */
 339          void mmi_dq_wifi_via_alarm(void)
 340          {
 341   1        mmi_dq_wifi_wakeup();
 342   1      
 343   1        delay_ms(150);
 344   1      
 345   1        wifi_via_alarm();
 346   1      }
 347          
 348          /*
 349          parameter: 
 350            none
 351          return :
 352            none
 353          */
 354          void mmi_dq_wifi_pw_alarm(void)
 355          {
 356   1        mmi_dq_wifi_wakeup();
 357   1      
 358   1        delay_ms(150);
 359   1      
 360   1        wifi_pw_alarm();
 361   1      }
 362          
 363          /*
 364          parameter: 
C51 COMPILER V9.59.0.0   MMI_WIFI                                                          03/04/2021 15:15:16 PAGE 7   

 365            none
 366          return :
 367            none
 368          */
 369          void mmi_dq_wifi_fp_alarm(void)
 370          {
 371   1        mmi_dq_wifi_wakeup();
 372   1      
 373   1        delay_ms(150);
 374   1      
 375   1        wifi_fp_alarm();
 376   1      }
 377          
 378          /*
 379          parameter: 
 380            none
 381          return :
 382            none
 383          */
 384          void mmi_dq_wifi_rfid_alarm(void)
 385          {
 386   1        mmi_dq_wifi_wakeup();
 387   1      
 388   1        delay_ms(150);
 389   1      
 390   1        wifi_rf_alarm();
 391   1      }
 392          
 393          
 394          /*
 395          parameter: 
 396            none
 397          return :
 398            none
 399          */
 400          void mmi_dq_wifi_lowpower_alarm(void)
 401          {
 402   1        static uint8_t wifi_lowpower_flag = 0;
 403   1        if(wifi_lowpower_flag == 0)
 404   1        {
 405   2          wifi_lowpower_flag = 1;
 406   2          mmi_dq_wifi_wakeup();
 407   2      
 408   2          delay_ms(150);
 409   2        
 410   2          wifi_lowpower_alarm();
 411   2        }
 412   1      }
 413          
 414          /*
 415          parameter: 
 416            none
 417          return :
 418            none
 419          */
 420          void mmi_dq_wifi_send_pwd_110(void)
 421          {
 422   1        mmi_dq_wifi_wakeup();
 423   1        delay_ms(150);
 424   1        wifi_send_pwd_110();
 425   1        delay_ms(20);
 426   1        wifi_open_by_password();
C51 COMPILER V9.59.0.0   MMI_WIFI                                                          03/04/2021 15:15:16 PAGE 8   

 427   1      }
 428          
 429          /*
 430          parameter: 
 431            none
 432          return :
 433            none
 434          */
 435          void mmi_dq_wifi_send_fp_110(void)
 436          {
 437   1        mmi_dq_wifi_wakeup();
 438   1        delay_ms(150);
 439   1        wifi_send_fp_110();
 440   1        delay_ms(20);
 441   1        wifi_open_by_fp();
 442   1      }
 443          
 444          /*
 445          parameter: 
 446            none
 447          return :
 448            none
 449          */
 450          void mmi_dq_wifi_set_110(void)
 451          {
 452   1        mmi_dq_wifi_wakeup();
 453   1        delay_ms(150);
 454   1        wifi_set_110();
 455   1      }
 456          
 457          
 458          
 459          /*
 460          parameter: 
 461            none
 462          return :
 463            none
 464          */
 465          unsigned char mmi_dq_wifi_get_running_flag(void)
 466          {
 467   1        if(wifi_check_times>0)
 468   1          return 1;
 469   1        return 0;
 470   1      }
 471          
 472          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    644    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      8       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
