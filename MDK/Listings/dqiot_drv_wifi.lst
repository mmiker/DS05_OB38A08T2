C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/04/2021 15:15:14 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DQIOT_DRV_WIFI
OBJECT MODULE PLACED IN .\Objects\dqiot_drv_wifi.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\src\dqiot_drv_wifi.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\inc;..\
                    -mmi_inc) DEBUG OBJECTEXTEND PRINT(.\Listings\dqiot_drv_wifi.lst) TABS(2) OBJECT(.\Objects\dqiot_drv_wifi.obj)

line level    source

   1          #ifndef __DQIOT_DRV_WIFI_H__
   2          #define __DQIOT_DRV_WIFI_H__
   3          #include "dqiot_drv_wifi.h"
   4          #include "mmi_feature.h"
   5          #include "I2C.h"
   6          #include "delay.h"
   7          
   8          /*
   9          parameter: 
  10            none
  11          return :
  12            none
  13          */
  14          uint8_t UH010_ReadDatas(uint8_t *send,uint8_t send_len,uint8_t *Buf,uint8_t len) 
  15          {
  16   1        int i;
  17   1        for (i = 0; i < len; i++) 
  18   1        {
  19   2          Buf[i] = 0;
  20   2        }
  21   1        if(send_len>0)
  22   1        {
  23   2          // Write: register address we want to start reading from
  24   2          I2C_Master_Write_Data(CONTROL_ADDR, send, send_len, 0);
  25   2          // Read: the number of bytes requested.
  26   2          I2C_Master_Read_Data(CONTROL_ADDR, Buf, len);
  27   2        }
  28   1        else
  29   1        {
  30   2            I2C_Master_Read_Data(CONTROL_ADDR, Buf, len);
  31   2        }
  32   1        return 0;
  33   1      }
  34          
  35          /*
  36          parameter: 
  37            none
  38          return :
  39            none
  40          */
  41          unsigned char UH010_Write_Byte(uint8_t *send,uint8_t send_len)
  42          {
  43   1        I2C_Master_Write_Data(CONTROL_ADDR, send, send_len, 1);
  44   1        return 0;
  45   1      }
  46          
  47          /*
  48          parameter: 
  49            none
  50          return :
  51            none
  52          */
  53          uint8_t wifi_net_connect_send(void)
  54          {
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/04/2021 15:15:14 PAGE 2   

  55   1        uint8_t wifi_data[2];
  56   1        wifi_data[0] = WIFI_CMD_NET_CON;
  57   1        wifi_data[1] = 100;
  58   1        if(UH010_Write_Byte(wifi_data,2) == 0)
  59   1          return 1;
  60   1        else
  61   1          return 0;
  62   1      }
  63          
  64          /*
  65          parameter: 
  66            none
  67          return :
  68            none
  69          */
  70          uint8_t wifi_net_connect_state(void)
  71          {
  72   1        uint8_t wifi_data[2];
  73   1        uint8_t data_2[2] = {0};
  74   1        wifi_data[0] = WIFI_CMD_NET_STATE;
  75   1        wifi_data[1] = 100;
  76   1        UH010_Write_Byte(wifi_data,2);
  77   1        delay_ms(10);
  78   1        UH010_ReadDatas(wifi_data,0,data_2,2);
  79   1        if(data_2[0]=='I'&&data_2[1]=='O')
  80   1          return 1;
  81   1        else
  82   1          return 0;
  83   1        
  84   1      }
  85          
  86          /*
  87          parameter: 
  88            none
  89          return :
  90            none
  91          */
  92          uint8_t wifi_open_ask(void)
  93          {
  94   1        uint8_t wifi_data[2];
  95   1        wifi_data[0] = WIFI_CMD_WF_OPEN_ASK;
  96   1        wifi_data[1] = 100;
  97   1        if(UH010_Write_Byte(wifi_data,2) == 0)
  98   1          return 1;
  99   1        else
 100   1          return 0;
 101   1      }
 102          
 103          /*
 104          parameter: 
 105            none
 106          return :
 107            none
 108          */
 109          uint8_t wifi_open_reply_get(void)
 110          {
 111   1        uint8_t wifi_data[2];
 112   1        uint8_t data_2[2] = {0};
 113   1        wifi_data[0] = WIFI_CMD_WF_OPEN_REPLY;
 114   1        wifi_data[1] = 100;
 115   1        UH010_Write_Byte(wifi_data,2);
 116   1        delay_ms(10);
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/04/2021 15:15:14 PAGE 3   

 117   1        UH010_ReadDatas(wifi_data,0,data_2,2);
 118   1        if(data_2[0]=='K'&&data_2[1]=='O')
 119   1          return 1;
 120   1        else if(data_2[0]=='K'&&data_2[1]=='E')
 121   1          return 2;
 122   1        else if(data_2[0]=='K'&&data_2[1]=='K')
 123   1          return 3;
 124   1        else
 125   1          return 0;
 126   1      
 127   1      
 128   1      }
 129          
 130          /*
 131          parameter: 
 132            none
 133          return :
 134            none
 135          */
 136          void wifi_wake_up(void)
 137          {
 138   1      
 139   1        uint8_t wifi_data[2];
 140   1        wifi_data[0] = WIFI_CMD_WAKEUP;
 141   1        wifi_data[1] = 100;
 142   1        UH010_Write_Byte(wifi_data,2);
 143   1      }
 144          
 145          /*
 146          parameter: 
 147            none
 148          return :
 149            none
 150          */
 151          void wifi_sleep_mode(void)
 152          {
 153   1        uint8_t wifi_data[2];
 154   1        wifi_data[0] = WIFI_CMD_SLEEP;
 155   1        wifi_data[1] = 100;
 156   1        UH010_Write_Byte(wifi_data,2);
 157   1      }
 158          
 159          /*
 160          parameter: 
 161            none
 162          return :
 163            none
 164          */
 165          void wifi_add_password(void)
 166          {
 167   1        uint8_t wifi_data[2];
 168   1        wifi_data[0] = WIFI_CMD_ADD_PW;
 169   1        wifi_data[1] = 100;
 170   1        UH010_Write_Byte(wifi_data,2);
 171   1      }
 172          
 173          /*
 174          parameter: 
 175            none
 176          return :
 177            none
 178          */
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/04/2021 15:15:14 PAGE 4   

 179          void wifi_del_password(void)
 180          {
 181   1        uint8_t wifi_data[2];
 182   1        wifi_data[0] = WIFI_CMD_DEL_PW;
 183   1        wifi_data[1] = 100;
 184   1        UH010_Write_Byte(wifi_data,2);
 185   1      }
 186          
 187          /*
 188          parameter: 
 189            none
 190          return :
 191            none
 192          */
 193          void wifi_add_fp(void)
 194          {
 195   1        uint8_t wifi_data[2];
 196   1        wifi_data[0] = WIFI_CMD_ADD_FP;
 197   1        wifi_data[1] = 100;
 198   1        UH010_Write_Byte(wifi_data,2);
 199   1      }
 200          
 201          /*
 202          parameter: 
 203            none
 204          return :
 205            none
 206          */
 207          void wifi_del_fp(void)
 208          {
 209   1        uint8_t wifi_data[2];
 210   1        wifi_data[0] = WIFI_CMD_DEL_FP;
 211   1        wifi_data[1] = 100;
 212   1        UH010_Write_Byte(wifi_data,2);
 213   1      }
 214          
 215          /*
 216          parameter: 
 217            none
 218          return :
 219            none
 220          */
 221          void wifi_open_by_wifi(void)
 222          {
 223   1        uint8_t wifi_data[2];
 224   1        wifi_data[0] = WIFI_CMD_WF_OPEN;
 225   1        wifi_data[1] = 100;
 226   1        UH010_Write_Byte(wifi_data,2);
 227   1      }
 228          
 229          
 230          /*
 231          parameter: 
 232            none
 233          return :
 234            none
 235          */
 236          void wifi_open_by_password(void)
 237          {
 238   1        uint8_t wifi_data[2];
 239   1        wifi_data[0] = WIFI_CMD_PW_OPEN;
 240   1        wifi_data[1] = 100;
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/04/2021 15:15:14 PAGE 5   

 241   1        UH010_Write_Byte(wifi_data,2);
 242   1      }
 243          
 244          /*
 245          parameter: 
 246            none
 247          return :
 248            none
 249          */
 250          void wifi_open_by_rfid(void)
 251          {
 252   1        uint8_t wifi_data[2];
 253   1        wifi_data[0] = WIFI_CMD_RF_OPEN;
 254   1        wifi_data[1] = 100;
 255   1        UH010_Write_Byte(wifi_data,2);
 256   1      }
 257          
 258          
 259          /*
 260          parameter: 
 261            none
 262          return :
 263            none
 264          */
 265          void wifi_open_by_fp(void)
 266          {
 267   1        uint8_t wifi_data[2];
 268   1        wifi_data[0] = WIFI_CMD_FP_OPEN;
 269   1        wifi_data[1] = 100;
 270   1        UH010_Write_Byte(wifi_data,2);
 271   1      }
 272          
 273          /*
 274          parameter: 
 275            none
 276          return :
 277            none
 278          */
 279          void wifi_open_by_key(void)
 280          {
 281   1        uint8_t wifi_data[2];
 282   1        wifi_data[0] = WIFI_CMD_KEY_OPEN;
 283   1        wifi_data[1] = 100;
 284   1        UH010_Write_Byte(wifi_data,2);
 285   1      }
 286          
 287          /*
 288          parameter: 
 289            none
 290          return :
 291            none
 292          */
 293          void wifi_door_close(void)
 294          {
 295   1        uint8_t wifi_data[2];
 296   1        wifi_data[0] = WIFI_CMD_CLOSE;
 297   1        wifi_data[1] = 100;
 298   1        UH010_Write_Byte(wifi_data,2);
 299   1      }
 300          
 301          /*
 302          parameter: 
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/04/2021 15:15:14 PAGE 6   

 303            none
 304          return :
 305            none
 306          */
 307          void wifi_via_alarm(void)
 308          {
 309   1        uint8_t wifi_data[2];
 310   1        wifi_data[0] = WIFI_CMD_VIA_ALARM;
 311   1        wifi_data[1] = 100;
 312   1        UH010_Write_Byte(wifi_data,2);
 313   1      }
 314          
 315          /*
 316          parameter: 
 317            none
 318          return :
 319            none
 320          */
 321          void wifi_pw_alarm(void)
 322          {
 323   1        uint8_t wifi_data[2];
 324   1        wifi_data[0] = WIFI_CMD_PW_ALARM;
 325   1        wifi_data[1] = 100;
 326   1        UH010_Write_Byte(wifi_data,2);
 327   1      }
 328          
 329          /*
 330          parameter: 
 331            none
 332          return :
 333            none
 334          */
 335          void wifi_fp_alarm(void)
 336          {
 337   1        uint8_t wifi_data[2];
 338   1        wifi_data[0] = WIFI_CMD_FP_ALARM;
 339   1        wifi_data[1] = 100;
 340   1        UH010_Write_Byte(wifi_data,2);
 341   1      }
 342          
 343          /*
 344          parameter: 
 345            none
 346          return :
 347            none
 348          */
 349          void wifi_rf_alarm(void)
 350          {
 351   1        uint8_t wifi_data[2];
 352   1        wifi_data[0] = WIFI_CMD_RF_ALARM;
 353   1        wifi_data[1] = 100;
 354   1        UH010_Write_Byte(wifi_data,2);
 355   1      }
 356          
 357          
 358          /*
 359          parameter: 
 360            none
 361          return :
 362            none
 363          */
 364          void wifi_lowpower_alarm(void)
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/04/2021 15:15:14 PAGE 7   

 365          {
 366   1        uint8_t wifi_data[2];
 367   1        wifi_data[0] = WIFI_CMD_LOWPOWER_ALARM;
 368   1        wifi_data[1] = 100;
 369   1        UH010_Write_Byte(wifi_data,2);
 370   1      }
 371          
 372          
 373          void wifi_send_fp_110(void){
 374   1        uint8_t wifi_data[2];
 375   1        wifi_data[0] = WIFI_CMD_WF_OPEN_FP_110;
 376   1        wifi_data[1] = 100;
 377   1        UH010_Write_Byte(wifi_data,2);
 378   1      
 379   1      }
 380          
 381          void wifi_send_pwd_110(void){
 382   1        uint8_t wifi_data[2];
 383   1        wifi_data[0] = WIFI_CMD_WF_OPEN_PSW_110;
 384   1        wifi_data[1] = 100;
 385   1        UH010_Write_Byte(wifi_data,2);
 386   1      
 387   1      }
 388          
 389          void wifi_set_110(void){
 390   1        uint8_t wifi_data[2];
 391   1        wifi_data[0] = WIFI_CMD_WF_SET_110;
 392   1        wifi_data[1] = 100;
 393   1        UH010_Write_Byte(wifi_data,2);
 394   1      }
 395          
 396          
 397          #endif
 398          
 399          
 400          
 401          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    833    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =      4      60
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
