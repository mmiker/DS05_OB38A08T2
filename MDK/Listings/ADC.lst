C51 COMPILER V9.59.0.0   ADC                                                               03/04/2021 15:14:13 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\ADC.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\src\ADC.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(..\inc;..\mmi_inc) DE
                    -BUG OBJECTEXTEND PRINT(.\Listings\ADC.lst) TABS(2) OBJECT(.\Objects\ADC.obj)

line level    source

   1          #include "OB38A08T2.h"
   2          #include "ADC.h"
   3          #include "Timer.h"
   4          
   5          unsigned int n_data = 0x0000;
   6          bit ADCfinish = 0;
   7          
   8          void ADC_Start(unsigned char n_ADC_CH)
   9          {
  10   1          ADCC2 = n_ADC_CH; //Set a new channel 使能ADC取样
  11   1          ADCC2 |= 0x80;    //ADC start conversion
  12   1      }
  13          
  14          void ADC_Init(void)
  15          {
  16   1          ADCC1 = d_ADCnEN0;                 //Set ADC channel
  17   1          ADCCS = d_ADCnEN1 | d_ADC_CLK_Sel; //Set ADC channel & Select ADC clock
  18   1          IEADC = 1;                         //Enable ADC interrupt.
  19   1          EA = 1;
  20   1      }
  21          
  22          unsigned int ADC_Read12() //12-bit ADC
  23          {
  24   1          unsigned int n_ADCD12 = 0x0000;
  25   1          n_ADCD12 = (ADCDH << 4) | ADCDL; //12-bit ADC
  26   1          return n_ADCD12;
  27   1      }
  28          
  29          void ADCInterrupt(void) interrupt d_ADC_Vector // ADC Interrupt Vector Address 0053h => interrupt 10
  30          {
  31   1          n_data = ADC_Read12(); //Read ADC
  32   1          ADCfinish = 1;
  33   1      }
  34          
  35          unsigned int ADC(void)
  36          {
  37   1          if (d_ADCnEN0 & 0x40)
  38   1          {
  39   2              ADC_Start(d_ADC_CH6_IN);
  40   2              while (!ADCfinish)
  41   2                  ;
  42   2              ADCfinish = 0;
  43   2          }
  44   1          return n_data;
  45   1      }
  46          
  47          /**
  48            * @brief  get adc data
  49            * @param  adc_channel_addr:ADC channel
  50            * @return none
  51            * @note   none
  52            * @see    none
  53            */
  54          uint16_t get_adc_data(uint8_t adc_channel_addr)
C51 COMPILER V9.59.0.0   ADC                                                               03/04/2021 15:14:13 PAGE 2   

  55          {
  56   1          uint16_t adc_data;
  57   1          adc_data = ADC();
  58   1          return adc_data;
  59   1      }
*** WARNING C280 IN LINE 54 OF ..\src\ADC.c: 'adc_channel_addr': unreferenced local variable
  60          
  61          /**
  62            * @brief  获取adc数据的平均值
  63            * @param  
  64            * adc_channel_addr ADC channel;
  65            * times 时间ms
  66            * @return none
  67            * @note   none
  68            * @see    none
  69            */
  70          static uint16_t Get_Adc_Average(uint8_t adc_channel_addr, uint8_t times)
  71          {
  72   1          uint32_t temp_val = 0;
  73   1          uint8_t t;
  74   1          for (t = 0; t < times; t++)
  75   1          {
  76   2              temp_val += get_adc_data(adc_channel_addr);
  77   2              TIMER1_Delay(5);
  78   2          }
  79   1          return temp_val / times;
  80   1      }
  81          
  82          /**
  83            * @brief  电压计算
  84            * @param  none
  85            * @return none
  86            * @note   none
  87            * @see    none
  88            */
  89          unsigned char adc_VolT(void)
  90          {
  91   1          unsigned int adcx;
  92   1          float temp;
  93   1      
  94   1          // ADC_ENABLE();
  95   1          TIMER1_Delay(5);
  96   1          adcx = Get_Adc_Average(d_ADCnEN0, 10); //获取10ms平均值
  97   1          // ADC_DISABLE();
  98   1      
  99   1          temp = (float)adcx * (3.3 / 4096); //计算电压
 100   1      
 101   1          if (temp < 2.22) //4.8v=2.22
 102   1              return 2;
 103   1          else if (temp < 2.3525) //<5v=2.3525
 104   1              return 1;           //mmi_dq_aud_play_with_id(AUD_BASE_ID_LOW_BATTERY);
 105   1      
 106   1          return 0;
 107   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    328    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.59.0.0   ADC                                                               03/04/2021 15:14:13 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
